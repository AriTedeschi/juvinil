!--! FIRST
block -> {
decls -> int float boolean char string
decl -> int float boolean char string
type -> int float boolean char string
basic -> void int float boolean char string
num -> _NUM_
real -> _NUM_
stmts -> _ID_ { if while do break continue true false
stmt -> _ID_ { if while do break continue true false
asgn -> _ID_
func -> _ID_
params -> _ID_ - ++ -- ( true false _NUM_
funcdecl -> func
paramsdecl -> int float boolean char string
boolexpr -> ! - ++ -- ( true false _NUM_ ID
join -> ! - ++ -- ( true false _NUM_ ID
equality -> ! - ++ -- ( true false _NUM_ ID
cmp -> ! - ++ -- ( true false _NUM_ ID
expr -> ! - ++ -- ( true false _NUM_ ID
brn -> ! - ++ -- ( true false _NUM_ ID
term -> ! - ++ -- ( true false _NUM_ ID
unit -> ! - ++ -- ( true false _NUM_ ID
factor -> ! - ++ -- ( true false _NUM_ ID
!--! FOLLOW
block -> }
decls -> _ID_ { func int float boolean char string if while do break continue true false
decl -> _ID_ { func int float boolean char string if while do break continue true false
type -> _ID_ { func int float boolean char string if while do break continue true false
basic -> _ID_ { func int float boolean char string if while do break continue true false
num -> ; ] && ||
real -> ; ] && ||
stmts -> }
stmt -> _ID_ { if while do break continue true false }
asgn -> ;
func -> ;
params -> )
funcdecl -> ;
paramsdecl -> _ID_ { func int float boolean char string
boolexpr -> ) ; ] && ||
join -> && ||
equality -> == != && ||
cmp -> < <= > >= == != && ||
expr -> + - && ||
brn -> && ||
term -> * / % ; ] + - < <= > >= == != & | && ||
unit -> % ; ] + - < <= > >= == != & | && ||
factor -> ; ] + - < <= > >= == != & | && ||
!--! LOOKAHEAD
block -> {
decls -> int float boolean char string
decl -> int float boolean char string
type -> int float boolean char string
basic -> void int float boolean char string
stmts -> _ID_ { if while do break continue true false
stmt -> _ID_ { if while do break continue true false
asgn -> _ID_
func -> _ID_
params -> _ID_ - ++ -- ( true false _NUM_
funcdecl -> func
paramsdecl -> int float boolean char string
